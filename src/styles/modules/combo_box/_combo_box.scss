.softComboBox {
  @include softFormControlSize(auto, $includeAlternates: true);
  position: relative;

  /**
   * 1. Allow pills to truncate their text with an ellipsis.
   * 2. Don't allow pills to overlap with the caret or clear button.
   * 3. The height on combo can be larger than normal text inputs.
   */

  &--compressed,
  .softFormControlLayout--compressed {
    height: auto;
  }

  .softComboBox__inputWrap {
    @include softFormControlStyle($includeStates: false, $includeSizes: false);
    @include softFormControlWithIcon($isIconOptional: true);
    @include softFormControlSize(auto, $includeAlternates: true);
    padding: $softSizeXS $softSizeS;
    // sass-lint:disable-block mixins-before-declarations
    @include softFormControlLayoutPadding(1); /* 2 */

    display: flex; /* 1 */

    &.softComboBox__inputWrap-isClearable {
      @include softFormControlLayoutPadding(2); /* 2 */
    }

    &:not(.softComboBox__inputWrap--noWrap) {
      padding: $softSizeXS;
      height: auto;  /* 3 */
      flex-wrap: wrap; /* 1 */
      align-content: flex-start;

      &:hover {
        cursor: text;
      }
    }
  }

  /**
   * 1. Force field height to match other field heights.
   * 2. Force input height to expand to fill this element.
   * 3. Reset appearance on Safari.
   * 4. Fix react-input-autosize appearance.
   * 5. Prevent a lot of input from causing the react-input-autosize to overflow the container.
   */
  .softComboBox__input {
    // sass-lint:disable-block no-important
    display: inline-flex !important; /* 1 */
    height: 32px; /* 2 */
    overflow: hidden; /* 5 */

    > input {
      @include softFont;
      appearance: none; /* 3 */
      padding: 0;
      border: none;
      background: transparent;
      font-size: $softFontSizeS;
      color: $softTextColor;
      margin: $softSizeXS;
      line-height: $softLineHeight; /* 4 */
    }
  }

  &.softComboBox-isOpen {
    .softComboBox__inputWrap {
      @include softFormControlFocusStyle;
    }
  }

  &.softComboBox-isInvalid {
    .softComboBox__inputWrap {
      @include softFormControlInvalidStyle;
    }
  }

  &.softComboBox-isDisabled {
    .softComboBox__inputWrap {
      @include softFormControlDisabledStyle;
    }
  }

  &.softComboBox--compressed {
    .softComboBox__inputWrap {
      line-height: $softFormControlCompressedHeight; /* 2 */
      padding-top: 0;
      padding-bottom: 0;
    }
  }
}
