.c-switch {
  position:   relative;
  display:    inline-block;
  min-height: $SwitchHeight;

  .c-switch__label {
    padding-left:   $SizeS;
    line-height:    $SwitchHeight;
    font-size:      $FontSizeS;
    vertical-align: middle;
  }

  /**
   * 1. The input is "hidden" but still focusable.
   * 2. Make sure it's still hidden when [disabled].
   */
  .c-switch__input,
  .c-switch__input[disabled] /* 2 */
  {
    position: absolute;
    opacity:  0; /* 1 */
    width:    100%;
    height:   100%;
    cursor:   pointer;
  }

  .c-switch__input:focus + .c-switch__body {

    .c-switch__thumb {
      @include CustomControlFocused;
    }
  }

  .c-switch__body {
    pointer-events:   none;
    width:            $SwitchWidth;
    height:           $SwitchHeight;
    background-color: $ColorPrimary;
    display:          inline-block;
    position:         relative;
    border-radius:    $SwitchHeight;
    vertical-align:   middle;
  }

  .c-switch__thumb {
    @include CustomControl($type: 'round', $size: $SwitchThumbSize);

    position:   absolute;
    display:    inline-block;
    left:       $SwitchWidth - $SwitchThumbSize;
    transition: border-color $AnimSpeedNormal $AnimSlightBounce, background-color $AnimSpeedNormal $AnimSlightBounce, left $AnimSpeedNormal $AnimSlightBounce, transform $AnimSpeedNormal $AnimSlightBounce;
  }

  .c-switch__track {
    position:      absolute;
    left:          0;
    top:           0;
    right:         0;
    bottom:        0;
    overflow:      hidden;
    border-radius: $SwitchHeight;
  }

  .c-switch__icon {
    position:   absolute;
    right:      -($SwitchWidth - ($SwitchThumbSize / 2));
    top:        ($SwitchHeight - $SwitchIconHeight) / 2;
    bottom:     0;
    width:      $SwitchWidth - ($SwitchThumbSize / 2) + $SizeS;
    height:     $SwitchIconHeight;
    transition: left $AnimSpeedNormal $AnimSlightBounce, right $AnimSpeedNormal $AnimSlightBounce;
    fill:       $TextColor;
  }

  .c-switch__icon--checked {
    right: auto;
    left:  -$SizeS;
    fill:  $ColorEmptyShade;
  }

  /**
   * The thumb is slightly scaled when in use, unless it's disabled.
   */
  &:hover {
    .c-switch__input:not(:disabled) ~ .c-switch__body {
      .c-switch__thumb {
        transform: scale(1.05);
      }
    }
  }

  &:active {
    .c-switch__thumb {
      transform: scale(.95);
    }
  }

  .c-switch__input:disabled:hover {
    cursor: not-allowed;
  }

  .c-switch__input:disabled ~ .c-switch__body,
  .c-switch__input:checked:disabled ~ .c-switch__body {
    background-color: lightOrDarkTheme(transparentize($ColorMediumShade, .8), transparentize($ColorMediumShade, .3));

    .c-switch__thumb {
      @include CustomControlDisabled;
      background-color: lightOrDarkTheme(transparentize($ColorMediumShade, .8), transparentize($ColorMediumShade, .3));
    }

    .c-switch__icon {
      fill: $FormCustomControlDisabledIconColor;
    }

    + label {
      color: $FormControlDisabledColor;
    }
  }

  .c-switch__input:not(:checked):not(:disabled) ~ .c-switch__body {
    background-color: lightOrDarkTheme(transparentize($ColorMediumShade, .8), transparentize($ColorMediumShade, .3));
  }

  /**
   * When input is not checked, we shift around the positioning of sibling/child selectors.
   */
  .c-switch__input:not(:checked) ~ .c-switch__body {
    .c-switch__thumb {
      left: 0;
    }

    .c-switch__icon {
      right: -$SizeS;

      &.c-switch__icon--checked {
        right: auto;
        left:  -($SwitchWidth - ($SwitchThumbSize / 2));
      }
    }
  }
}
