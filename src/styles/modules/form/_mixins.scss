@function softFormControlGradient($color: $softColorPrimary) {
  @return linear-gradient(to top,
          $color,
          $color 2px,
          transparent 2px,
          transparent 100%
  );
}

/**
 * 2. Account for inner box-shadow style border when in group
 * 3. Must supply both values to background-size or some browsers apply the single value to both directions
 */

@mixin softFormControlText {
  @include softFont;
  font-size: $softFontSizeS;
  line-height: 1em; // fixes text alignment in IE
  color: $softTextColor;

  &::placeholder {
    color: $softColorDarkShade;
  }
}


@mixin softFormControlSize(
  $height: $softFormControlHeight,
  $includeAlternates: false
) {
  // Default
  max-width: $softFormMaxWidth;
  width: 100%;
  height: $height;

  @if ($includeAlternates) {
    &--fullWidth {
      max-width: 100%;
    }

    &--compressed {
      height: $softFormControlCompressedHeight;
    }

    &--inGroup {
      height: $softFormControlHeight - 2px; /* 2 */
    }

    &--inGroup#{&}--compressed {
      height: $softFormControlCompressedHeight - 2px; /* 2 */
    }
  }
}

@mixin softFormControlWithIcon($isIconOptional: false, $side: 'left') {
  @if ($isIconOptional) {
    @at-root {
      #{&}--withIcon {
        @include softFormControlLayoutPadding(1, $side);
      }
    }
  } @else {
    @include softFormControlLayoutPadding(1, $side);
  }
}

@mixin softFormControlIsLoading($isNextToIcon: false) {
  @at-root {
    #{&}-isLoading {
      @if ($isNextToIcon) {
        @include softFormControlLayoutPadding(2);
      } @else {
        @include softFormControlLayoutPadding(1);
      }
    }
  }
}

@mixin softFormControlDefaultShadow($borderOnly: false) {
  // sass-lint:disable-block indentation
  background-color: $softFormBackgroundColor;
  background-repeat: no-repeat;
  background-size: 0% 100%; /* 3 */

  @if ($borderOnly) {
    box-shadow: inset 0 0 0 1px $softFormBorderColor;
  } @else {
    box-shadow: #{$softFormControlBoxShadow},
    inset 0 0 0 1px $softFormBorderColor;
  }

  transition: box-shadow $softAnimSpeedFast ease-in,
  background-color $softAnimSpeedFast ease-in,
  background-image $softAnimSpeedFast ease-in,
  background-size $softAnimSpeedFast ease-in;
}

@mixin softFormControlCustomShadow() {
  background: #e2e7ea;
  color: #666f74;
  font-size: 16px;
  line-height: 25px;
  border: 1px solid #e2e7ea;
  -webkit-box-shadow: none;
  box-shadow: none;
  outline: 0;
  width: 100%;
  font-weight: 500;
  letter-spacing: .01em;
  border-radius: 3px;
  transition: box-shadow $softAnimSpeedFast ease-in,
  background-color $softAnimSpeedFast ease-in,
  background-image $softAnimSpeedFast ease-in,
  background-size $softAnimSpeedFast ease-in;
}

@mixin softFormControlFocusStyle($borderOnly: false) {
  // sass-lint:disable-block indentation, empty-args
  background-color: tintOrShade($softColorEmptyShade, 0%, 40%);
  background-image: softFormControlGradient();
  background-size: 100% 100%; /* 3 */

  @if ($borderOnly) {
    box-shadow: inset 0 0 0 1px transparentize($softColorFullShade, .84);
  } @else {
    box-shadow: 0 1px 1px -1px transparentize($softShadowColor, .8),
    0 4px 4px -2px transparentize($softShadowColor, .8),
    inset 0 0 0 1px transparentize($softColorFullShade, .84);
  }
}

@mixin softFormControlInvalidStyle {
  background-image: softFormControlGradient($softColorDanger);
  background-size: 100%;
}

@mixin softFormControlDisabledStyle {
  cursor: not-allowed;
  color: $softFormControlDisabledColor;
  background: $softFormBackgroundDisabledColor;
  box-shadow: inset 0 0 0 1px $softFormBorderDisabledColor;

  &::placeholder {
    color: $softFormControlDisabledColor;
  }
}

@mixin softFormControlReadOnlyStyle {
  cursor: default;
  // Use transparency since there is no border and in case form is on a non-white background
  background: transparentize(lightOrDarkTheme($softColorLightShade, #000), .88);
  border-color: transparent;
  box-shadow: none;
}

/**
 * 4. Override invalid state with focus state.
 */

@mixin softFormControlStyle($borderOnly: false, $includeStates: true, $includeSizes: true) {
  @include softFormControlSize($includeAlternates: $includeSizes);
  @include softFormControlCustomShadow;
  @include softFormControlText;

  border: none;
  padding: $softFormControlPadding;

  @if ($includeSizes) {
    &--compressed {
      padding-top: $softFormControlCompressedPadding;
      padding-bottom: $softFormControlCompressedPadding;
    }

    &--inGroup {
      // sass-lint:disable-block no-important
      box-shadow: none !important;
    }
  }

  @if ($includeStates) {
    &:invalid { /* 4 */
      @include softFormControlInvalidStyle;
    }

    &:focus { /* 4 */
      @include softFormControlFocusStyle;
    }

    &:disabled {
      @include softFormControlDisabledStyle;
    }

    &[readOnly] {
      @include softFormControlReadOnlyStyle;
    }
  }

}

// Custom styles and states for checkboxes and radios

@mixin softCustomControl($type: null, $size: $softSize) {
  @include softSlightShadow;

  @if $size {
    $size: $size - 2px; // subtract 2px from size to account for border size
    padding: $size / 2;
  }

  border: 1px solid shadeOrTint($softColorLightestShade, 18%, 30%);
  background: $softColorEmptyShade no-repeat center;

  @if $type == 'round' {
    border-radius: $size;
  } @else if $type == 'square' {
    border-radius: $softBorderRadius;
  }
  // sass-lint:disable-block indentation
  transition: background-color $softAnimSpeedFast ease-in,
  border-color $softAnimSpeedFast ease-in;
}

@mixin softCustomControlSelected($type: null) {
  border-color: $softColorPrimary;
  background-color: $softColorPrimary;

  @if $type != null {
    @include softIconBackground($type, $softColorEmptyShade);
  }
}

@mixin softCustomControlDisabled($type: null) {
  border-color: $softColorLightShade;
  background-color: $softColorLightShade;
  box-shadow: none;
  @if $type != null {
    @include softIconBackground($type, $softFormCustomControlDisabledIconColor);
  }
}

@mixin softCustomControlFocused {
  @include softFocusRing;
  border-color: $softColorPrimary;
}


// Deprecated mixins below. This was changed in Nov. 2018

@mixin softCustomControl--selected($type: null) { // sass-lint:disable-line mixin-name-format
  @include softCustomControlSelected($type);
  @warn '@mixin softCustomControl--selected is deprecated, please use softCustomControlSelected instead';
}

@mixin softCustomControl--disabled($type: null) { // sass-lint:disable-line mixin-name-format
  @include softCustomControlDisabled($type);
  @warn '@mixin softCustomControl--disabled is deprecated, please use softCustomControlDisabled instead';
}

@mixin softCustomControl--focused { // sass-lint:disable-line mixin-name-format
  @include softCustomControlFocused;
  @warn '@mixin softCustomControl--focused is deprecated, please use softCustomControlFocused instead';
}
