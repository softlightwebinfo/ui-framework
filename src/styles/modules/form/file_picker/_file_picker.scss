@import '../form_control_layout/mixins';

.c-file-picker {
  .c-file-picker__wrap {
    // Auto means the height isn't set to a fixed size
    @include FormControlSize(auto);

    position: relative;
    display:  inline-block;

    @at-root {
      .c-file-picker--compressed#{&} {
        height: $SizeXL;
      }
    }
  }

  // The input is an invisiable dropzone / button
  .c-file-picker__input {
    position: absolute;
    z-index:  0;
    left:     0;
    top:      0;
    width:    100%;
    height:   100%;
    opacity:  0;
    overflow: hidden;

    &:hover {
      cursor: pointer;
    }

    &:hover:disabled {
      cursor: not-allowed;
    }

    &:disabled ~ .c-file-picker__prompt {
      color: $ColorMediumShade;
    }
  }

  .c-file-picker__icon {
    margin-bottom: $Size;
    transition:    transform $AnimSpeedFast $AnimSlightResistance;

    @at-root {
      .c-file-picker--compressed#{&} {
        // sass-lint:disable-block no-important
        position:  absolute;
        top:       $SizeS;
        left:      $SizeM;
        transform: scale(1) !important; // don't scale icon on hover
      }
    }
  }

  /**
   * 1. Don't block the user from dropping files onto the filepicker.
   * 2. Put prompt on top of input, so the clear button can intercept the click.
   * 3. Ensure space for import icon and clear button (only if it has files)
   * 4. Delay focus gradient or else it will only partially transition while file chooser opens
   */
  .c-file-picker__prompt {
    @include FormControlDefaultShadow;

    pointer-events: none; /* 1 */
    position:       relative; /* 2 */
    z-index:        1; /* 2 */
    display:        block;
    padding:        $SizeL;
    text-align:     center;

    // sass-lint:disable-block indentation
    transition:     box-shadow $AnimSpeedFast ease-in,
                    background-color $AnimSpeedFast ease-in,
                    background-image $AnimSpeedFast ease-in,
                    background-size $AnimSpeedFast ease-in $AnimSpeedFast; /* 4 */

    // sass-lint:disable-block mixins-before-declarations
    @at-root {
      .c-file-picker--compressed#{&} {
        height:     $FormControlCompressedHeight;
        padding:    $FormControlCompressedPadding;
        @include FormControlWithIcon; /* 3 */
        text-align: left;
      }
    }
  }

  .c-file-picker__promptText {
    @include FontSizeS;
    display:       block;
    white-space:   nowrap;
    overflow:      hidden;
    text-overflow: ellipsis;

    @at-root {
      // make compressed prompt look like placeholder
      .c-file-picker--compressed#{&} {
        color:       $ColorMediumShade;
        line-height: $Size;
      }
    }
  }

  /**
   * 1. Undo the pointer-events: none applied to the enclosing prompt.
   */
  .c-file-picker__clearButton {
    pointer-events: auto; /* 1 */

    // sass-lint:disable-block mixins-before-declarations
    @at-root {
      .c-file-picker--compressed#{&} {
        @include FormControlLayoutClearIcon('.c-file-picker__clearIcon');
        position: absolute;
        top:      $SizeM / 2;
        right:    $SizeM;
      }
    }
  }

  // Hover and focus
  .c-file-picker__input:hover:not(:disabled) + .c-file-picker__prompt,
  .c-file-picker__input:focus + .c-file-picker__prompt {
    .c-file-picker__promptText {
      // Adding the underline to the prompt text ensures the underline
      // color is the same as the current text color
      text-decoration: underline;
    }

    .c-file-picker__icon {
      transform: scale(1.1);
    }
  }

  // Focus
  .c-file-picker__input:focus + .c-file-picker__prompt {
    @include FormControlFocusStyle;
  }

  // Disabled
  .c-file-picker__input:disabled + .c-file-picker__prompt {
    @include FormControlDisabledStyle;
  }

  &.c-file-picker-hasFiles.c-file-picker--compressed .c-file-picker__prompt {
    @include FormControlWithIcon(false, 'right'); /* 3 */
  }

  // When the filepicker has files in it, but not in compressed mode
  &:not(.c-file-picker--compressed).c-file-picker-hasFiles .c-file-picker__promptText {
    font-weight: $FontWeightBold;
  }

  // When the filepicker has files in it, AND in compressed mode
  &.c-file-picker--compressed.c-file-picker-hasFiles .c-file-picker__promptText {
    color: $TextColor;
  }

  // When you are dragging files over the dropzone
  &.c-file-picker__showDrop .c-file-picker__prompt {
    @include FormControlFocusStyle;

    .c-file-picker__promptText {
      text-decoration: underline;
    }

    .c-file-picker__icon {
      transform: scale(1.1);
      color:     $ColorPrimary;
    }
  }
}
