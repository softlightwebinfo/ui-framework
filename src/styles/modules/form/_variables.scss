// Sizing
$softFormMaxWidth: $softSizeXXL * 10 !default;
$softFormControlHeight: $softSizeXXL !default;
$softFormControlCompressedHeight: $softSizeXL !default;
$softFormControlPadding: $softSizeM !default;
$softFormControlCompressedPadding: $softSizeS !default;

$softRadioSize: $softSize !default;
$softCheckBoxSize: $softSize !default;

$softSwitchHeight: $softSize * 1.25 !default;
$softSwitchWidth: ($softSize * 2.5) + $softSizeXS !default;
$softSwitchThumbSize: $softSwitchHeight !default;
$softSwitchIconHeight: $softSize !default;

// Coloring
$softFormBackgroundColor: tintOrShade($softColorLightestShade, 60%, 40%) !default;
$softFormBackgroundDisabledColor: darken($softColorLightestShade, 2%) !default;
$softFormBorderColor: transparentize($softColorFullShade, .9) !default;
$softFormBorderDisabledColor: transparentize($softColorFullShade, .92) !default;
$softFormCustomControlDisabledIconColor: shadeOrTint($softColorMediumShade, 38%, 48.5%) !default; // exact 508c foreground for $softColorLightShade
$softFormControlDisabledColor: $softColorMediumShade !default;
$softFormControlBoxShadow: 0 1px 1px -1px transparentize($softShadowColor, .8), 0 3px 2px -2px transparentize($softShadowColor, .8);

//** DEPRECATED **//
//** DEPRECATED **//
//** DEPRECATED **//
//** DEPRECATED **//

@if variable-exists(softFormControlHeight--compressed) {
  $softFormControlCompressedHeight: $softFormControlHeightCompressed !global;
  @warn '`$softFormControlHeightCompressed` is deprecated. Please use `$softFormControlCompressedHeight` instead';
}

@if variable-exists(softFormControlPadding--compressed) {
  $softFormControlCompressedPadding: $softFormControlPaddingCompressed !global;
  @warn '`$softFormControlPaddingCompressed` is deprecated. Please use `$softFormControlCompressedPadding` instead';
}

@if variable-exists(softFormBorderColorDisabled) {
  $softFormBorderDisabledColor: $softFormBorderColorDisabled !global;
  @warn '`$softFormBorderColorDisabled` is deprecated. Please use `$softFormBorderDisabledColor` instead';
}
